#!/usr/bin/env python3
import json
from functools import partial
from inspect import getsource
from math import log
import hashlib
from sys import argv
from bisect import bisect_left

if __name__ == '__main__':
    map_in_name, script_name = argv[1], argv[2]

    map_in_file = open(map_in_name)
    origin_mapping = json.load(map_in_file)
    map_in_file.close()

    mmm = sorted(list(origin_mapping.items()),key=lambda x: x[0])

    k,v = zip(*mmm)
    mm = sorted(zip(v,[ i for i in range(len(k)) ]),key=lambda x: x[0])
    v, idx = zip(*mm) 
    idx = list(idx)
    mark = []
    for i in range(len(k)):
        if i != idx[i]:
            mark.append(i) 
            mark.append(idx[i])  
    document = """
import json
import hashlib
from sys import argv

_m = {}
nf, of = argv[1], argv[2]
nf = open(nf, 'r')
nf = json.load(nf)
keys, values = sorted(nf[0]), sorted(nf[1])

nm = {{}}
for i in range(len(keys)):
    nm[keys[i]] = values[i]
for i in range(0,len(_m),2):
    nm[keys[_m[i+1]]] = values[_m[i]]
of = open(of, 'w')
of.write(json.dumps(nm))
of.close()
    """.format(str(mark))
    script = open(script_name, 'w')
    script.write(document)
    script.close()